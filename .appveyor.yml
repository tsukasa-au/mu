environment:
  matrix:
    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "32"

platform: x86

configuration: Release

init:
  - cmd: ver
  - cmd: ECHO Processor architecture - %PROCESSOR_ARCHITECTURE%
  - cmd: wmic OS get OSArchitecture

  # Utilise pre-installed MinGw for make
  - ps: $env:PATH = 'C:\MinGW\msys\1.0\bin;C:\MinGW\mingw32\bin;C:\MinGW\bin;' + $env:PATH

  # As AppVeyor has multiple python install, check which one uses by default
  - cmd: ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%
  - cmd: python --version
  - cmd: python -c "import struct; print(struct.calcsize('P') * 8)"
  - cmd: python -c "import sys; print(sys.executable)"

  # Set the relevant Python and pip location to the path
  - cmd: set PATH=%PYTHON%;%PYTHON%\scripts;%PATH%
  - cmd: ECHO Path - %PATH%

  # Verify the new default python
  - cmd: python --version
  - cmd: python -c "import struct; print(struct.calcsize('P') * 8)"
  - cmd: python -c "import sys; print(sys.executable)"
  - cmd: pip --version

  # Check out installed python packages
  - cmd: pip freeze

install:
  - cmd: pip install PyQt5==5.8
  - cmd: pip install pyinstaller
  - cmd: pip install -r requirements.txt

  # Check installed packages
  - cmd: pip freeze
  - cmd: python -c "import PyQt5"
  - cmd: python -c "import PyQt5.Qsci"

  # Build mu using PyInstaller, rename dist folder and executable with timestamp
  - cmd: pyinstaller package\pyinstaller.spec
  - ps: Rename-Item -path .\dist upload
  - cmd: dir upload
  - ps: Rename-Item .\upload\mu.exe mu_$(get-date -f yyyy-MM-dd_HH_mm)_$($env:APPVEYOR_REPO_BRANCH)_$($env:APPVEYOR_REPO_COMMIT.subString(0,7)).exe

# Not a project with an msbuild file, build done at install.
build: None

# Makefiles support provided by MinGW, which does POSIX translations, so run tests natively as well
test_script:
  - cmd: make clean
  - cmd: py.test
  - cmd: make check

# Push artifacts to s3 bucket and list all
before_deploy:
  - ps: Get-ChildItem .\upload\*.exe | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name -DeploymentName elmo-microbit-s3-deployment }
  - ps: foreach($artifactName in $artifacts.keys) { $artifacts[$artifactName] }

# Deploy build to Amazon S3 bucket
deploy:
  name: elmo-microbit-s3-deployment
  provider: S3
  access_key_id: AKIAI52TNDFXBWS32MGA
  secret_access_key:
    secure: tgXxM5ks1kLeIT1elnXWdc2hlR/d54ldB0VxGppKEcEW9Ei3jbsfvU2RKY9XLGWB
  bucket: elmo-microbit-deployment
  region: ap-southeast-2
  set_public: true
  folder: windows
  on:
    branch: [master]
